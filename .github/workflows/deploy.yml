name: Angular CI/CD Deployment

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless

      - name: Build Angular App
        run: npm run build

      - name: Create 404 page
        run: |
          if [ -f "dist/webber-web/browser/index.html" ]; then
            cp dist/webber-web/browser/index.html dist/webber-web/browser/404.html
            echo "✅ 404 page created successfully"
          else
            echo "❌ index.html not found at expected location"
            find dist -name "index.html"
          fi

      - name: Log in to DigitalOcean Container Registry
        run: echo "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" | docker login registry.digitalocean.com -u oauth --password-stdin

      - name: Build and Tag Docker Image
        run: |
          docker build -t registry.digitalocean.com/tppt-registry/webber-web:latest .
          docker tag registry.digitalocean.com/tppt-registry/webber-web:latest registry.digitalocean.com/tppt-registry/webber-web:${{ github.sha }}

      - name: Push Docker Image
        run: |
          docker push registry.digitalocean.com/tppt-registry/webber-web:latest
          docker push registry.digitalocean.com/tppt-registry/webber-web:${{ github.sha }}

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config
          export KUBECONFIG=$HOME/.kube/config
          kubectl config use-context do-lon1-my-cluster  # Replace with your actual context name

      - name: Verify Kubernetes Cluster Connection
        run: |
          echo "✅ Checking Kubernetes connection..."
          kubectl cluster-info
          kubectl get nodes
          kubectl get deployments -n default

      - name: Update Kubernetes Deployment
        run: |
          echo "🚀 Updating deployment with new image..."
          kubectl set image deployment/webber-web webber-web=registry.digitalocean.com/tppt-registry/webber-web:${{ github.sha }} --namespace=default
          kubectl rollout restart deployment/webber-web --namespace=default

      - name: Verify Deployment Status
        run: |
          echo "🔍 Checking deployment status..."
          kubectl get pods -n default
